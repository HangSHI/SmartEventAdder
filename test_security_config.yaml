# TEST SECURITY CONFIGURATION FILE
# This file contains intentional test secrets to validate CI/CD security scanning
# These are fake credentials for testing purposes only

# Database Configuration
database:
  host: "prod-db.example.com"
  port: 5432
  username: "admin"
  password: "super_secret_db_password_2024_test"
  connection_string: "postgresql://admin:hardcoded_password_123@prod-db.example.com:5432/production"

# AWS Configuration
aws:
  access_key_id: "AKIA1234567890ABCDEF"
  secret_access_key: "wJalrXUtnFEMI/K7MDENG/bPxRfiCYzQvE4nM2kL8TestKey2024"
  region: "us-east-1"
  s3_bucket: "my-production-bucket"

# GitHub Configuration
github:
  token: "ghp_1234567890abcdefghijklmnopqrstuvwxyz1234"
  webhook_secret: "github_webhook_secret_test_12345"

# Google Cloud Configuration
google_cloud:
  project_id: "my-test-project-12345"
  private_key_id: "test1234567890abcdef"
  private_key: |
    -----BEGIN PRIVATE KEY-----
    MIIEvgIBADANBgkqhkiG9w0BAQEFAASCBKgwggSkAgEAAoIBAQC7VvBzTestKey
    (This is a fake private key for testing security scanning)
    -----END PRIVATE KEY-----
  client_email: "test-service@my-test-project.iam.gserviceaccount.com"
  client_id: "123456789012345678901"

# API Keys
api_keys:
  stripe_secret: "sk_test_51KjFm8NpX7cZ9qR3tY6vW2uE4fG8hI9jK0lMTestKey"
  stripe_public: "pk_test_51KjFm8NpX7cZ9qR3tY6vW2uE4fG8hI9jK0lMTestKey"
  sendgrid: "SG.test_sendgrid_api_key_2024_abcdefghijklmnopqr.rest_of_test_key"
  twilio_sid: "AC1234567890abcdef1234567890abcdef"
  twilio_token: "test_twilio_auth_token_2024_abcdef123456"
  openai: "sk-test1234567890abcdefghijklmnopqrstuvwxyz1234567890abcdef"

# Social Media API Keys
social_media:
  twitter_consumer_key: "test_twitter_consumer_key_abcdef1234567890"
  twitter_consumer_secret: "test_twitter_consumer_secret_1234567890abcdefghijklmnopqrstuvwxyz"
  facebook_app_id: "1234567890123456"
  facebook_app_secret: "test_facebook_app_secret_abcdefghijklmnopqrstuvwx"

# Webhooks and URLs
webhooks:
  slack: "https://hooks.slack.com/services/T12345678/B87654321/TestSlackWebhookToken123456789012"
  discord: "https://discord.com/api/webhooks/123456789012345678/test_discord_webhook_token_abcdefghijk"

# JWT and Encryption
security:
  jwt_secret: "test_jwt_secret_key_for_production_environment_2024"
  encryption_key: "test_32_char_encryption_key_2024!"
  api_secret: "test_api_secret_hash_abcdef1234567890"

# Email Configuration
email:
  smtp_host: "smtp.gmail.com"
  smtp_port: 587
  username: "noreply@testcompany.com"
  password: "test_email_app_specific_password_123"

# Redis Configuration
redis:
  host: "redis.example.com"
  port: 6379
  password: "test_redis_password_2024_secure"
  url: "redis://:test_redis_pass_123@redis.example.com:6379/0"

# Certificate Information
certificates:
  ssl_private_key_passphrase: "test_ssl_private_key_password_2024"
  ca_bundle_password: "test_ca_bundle_passphrase_secure"

# Sidekiq Configuration (this should trigger the same rule as the false positive)
sidekiq:
  redis_url: "redis://:test_sidekiq_redis_password@redis.example.com:6379/1"
  enterprise_token: "cafebabe:deadbeef"  # This should definitely be detected!

# MongoDB Configuration
mongodb:
  connection_string: "mongodb://admin:test_mongo_password_123@cluster.mongodb.net/production"
  username: "admin"
  password: "test_mongodb_admin_password_2024"